<project name="abdera" default="build" basedir="..">
<!--

  abdera Build
    targets:
      * build (compile everything)
      * test  (compile and run test cases)
      * dist  (compile, test and create jars)
      * clean (rather self explanatory)
      * docs  (build the javadocs)
-->
  <property name="version" value="0.1" />
  <property name="site" value="../site" />
  <property name="work" value="${basedir}/build/work" />
	<property name="test" value="${basedir}/build/test" />
  <property name="dist" value="${basedir}/dist" />
  <property name="dist_lib" value="${dist}/lib" />
  <property name="docs" value="${dist}/docs" />
  <property name="javadocs" value="${docs}/api" />
  <property name="core" value="${basedir}/core" />
  <property name="core.src" value="${core}/src/main/java" />
  <property name="core.test" value="${core}/src/test/java" />
  <property name="core.work" value="${work}/core" />
  <property name="core.jar" value="${dist}/${ant.project.name}.core.${version}.jar" />
  <property name="parser" value="${basedir}/parser" />
  <property name="parser.src" value="${parser}/src/main/java" />
  <property name="parser.test" value="${parser}/src/test" />
  <property name="parser.test.java" value="${parser}/src/test/java" />
  <property name="parser.test.resources" value="${parser}/src/test/resources" />
  <property name="parser.work" value="${work}/parser" />
  <property name="parser.jar" value="${dist}/${ant.project.name}.parser.${version}.jar" />

  <property name="dependencies" value="${basedir}/dependencies" />
  <property file="${dependencies}/deps.properties" />

  <path id="jar.dependencies">
    <fileset dir="${dependencies}" includes="**/*.jar" />
  </path>
  
  <target name="dependencies">
    <path id="">
      <fileset dir="dependencies" includes="*.jar" />
    </path>
  </target>
  
  <target name="init">
    <echo>
=====================================================
${ant.project.name}, ${version}
Working directory: ${work}
=====================================================
    </echo>

    <mkdir dir="${test}" />

    <condition property="do.download">
      <not>
        <and>
          <available file="${dependencies}/${geronimo.activation.jar}" />
          <available file="${dependencies}/${geronimo.javamail.jar}" />
          <available file="${dependencies}/${axiom.api.jar}" />
          <available file="${dependencies}/${axiom.impl.jar}" />
          <available file="${dependencies}/${jaxen.jar}" />
          <available file="${dependencies}/${log4j.jar}" />
          <available file="${dependencies}/${stax.jar}" />
          <available file="${dependencies}/${stax.api.jar}" />
          <available file="${dependencies}/${commons.logging.jar}" />
          <available file="${dependencies}/${commons.codec.jar}" />
          <available file="${dependencies}/${commons.httpclient.jar}" />
          <available file="${dependencies}/${junit.jar}" />
          <available file="${dependencies}/${wstx.jar}" />
        </and>
      </not>
    </condition>
    <antcall target="download"/>
  </target>
  
  <target name="compile.core" depends="init">
    <mkdir dir="${core.work}" />
    <javac srcdir="${core.src}"
           destdir="${core.work}"
           classpathref="jar.dependencies"/>
  	<javac srcdir="${core.test}"
  	       destdir="${test}" 
       	   classpathref="jar.dependencies"
  		     classpath="${core.work}"/>
  </target>
  
  <target name="compile.parser" depends="init,compile.core">
    <mkdir dir="${parser.work}" />
    <javac srcdir="${parser.src}"
           destdir="${parser.work}"
           classpathref="jar.dependencies" 
           classpath="${core.work}" />
  	<javac srcdir="${parser.test.java}"
  	       destdir="${test}"
  	       classpathref="jar.dependencies"
  	       classpath="${core.work};${parser.work}" />
  	<copy todir="${test}">
  	  <fileset dir="${parser.test.resources}">
  	    <include name="*.xml"/>
  	  </fileset>
  	</copy>
  </target>

  <target name="build" depends="init,compile.core,compile.parser"></target>

  <target name="docs" depends="init">
    <javadoc packagenames="org.apache.abdera.*"
             excludepackagenames="org.apache.abdera.util"
             sourcepath="${core.src}" 
             destdir="${javadocs}"
             windowtitle="Abdera"
             classpathref="jar.dependencies"/>
    <copy file="${basedir}/docs/index.html" todir="${docs}" />
  </target>
  
  <target name="test" depends="build">
    <echo>Running Core Tests...</echo>
    <java classpathref="jar.dependencies" 
          classpath="${core.work}:${parser.work}:${server.work}:${test}"
          classname="org.apache.abdera.test.core.TestSuite" />

    <echo>Running Stax Parser Tests...</echo>
    <java classpathref="jar.dependencies" 
          classpath="${core.work}:${parser.work}:${server.work}:${test}"
          classname="org.apache.abdera.test.parser.stax.TestSuite" />
  </target>

  <target name="clean">
    <delete dir="${work}" />
  	<delete dir="${test}" />
    <delete dir="${dist}" />
  </target>
  
  <target name="dist" depends="clean,build,test,docs">
    <mkdir dir="${dist}" />
    <mkdir dir="${dist_lib}" />
    <jar destfile="${core.jar}"   basedir="${core.work}" />
    <jar destfile="${parser.jar}" basedir="${parser.work}" />
    <copy todir="${dist_lib}">
      <fileset dir="${dependencies}"  />
    </copy>
  	<delete dir="${work}" />
  	<delete dir="${test}" />
  </target>
  
  <target name="zip" depends="dist"> 
    <zip destfile="${basedir}/${ant.project.name}.${version}.zip">
      <fileset dir="${dist}">
        <include name="**/*.jar" />
      </fileset>
      <fileset dir="${docs}" includes="**/*" />
    </zip>
  </target>

  <target name="download" if="do.download">
    <echo>Downloading project dependencies.  This may take a moment</echo>
    <parallel>
      <get src="${geronimo.activation.dir}/${geronimo.activation.jar}"
           dest="${dependencies}/${geronimo.activation.jar}"
           usetimestamp="true" />
      <get src="${geronimo.javamail.dir}/${geronimo.javamail.jar}"
           dest="${dependencies}/${geronimo.javamail.jar}"
           usetimestamp="true" />
      <get src="${axiom.dir}/${axiom.api.jar}"
           dest="${dependencies}/${axiom.api.jar}"
           usetimestamp="true" />
      <get src="${axiom.dir}/${axiom.impl.jar}"
           dest="${dependencies}/${axiom.impl.jar}"
           usetimestamp="true" />
      <get src="${jaxen.dir}/${jaxen.jar}"
           dest="${dependencies}/${jaxen.jar}"
           usetimestamp="true" />
      <get src="${log4j.dir}/${log4j.jar}"
           dest="${dependencies}/${log4j.jar}"
           usetimestamp="true" />
      <get src="${stax.dir}/${stax.jar}"
           dest="${dependencies}/${stax.jar}"
           usetimestamp="true" />
      <get src="${stax.dir}/${stax.api.jar}"
           dest="${dependencies}/${stax.api.jar}"
           usetimestamp="true" />
      <get src="${commons.logging.dir}/${commons.logging.jar}"
           dest="${dependencies}/${commons.logging.jar}"
           usetimestamp="true" />
      <get src="${commons.codec.dir}/${commons.codec.jar}"
           dest="${dependencies}/${commons.codec.jar}"
           usetimestamp="true" />
      <get src="${commons.httpclient.dir}/${commons.httpclient.jar}"
           dest="${dependencies}/${commons.httpclient.jar}"
           usetimestamp="true" />
      <get src="${junit.dir}/${junit.jar}"
           dest="${dependencies}/${junit.jar}"
           usetimestamp="true" />
      <get src="${wstx.dir}/${wstx.jar}"
           dest="${dependencies}/${wstx.jar}"
           usetimestamp="true" />
    </parallel>
  </target>
  
  <target name="clean-downloads" depends="init">
    <delete><fileset dir="${dependencies}" includes="**/*.jar" /></delete>
  </target>

  <target name="site-docs" depends="docs">
    <mkdir dir="${site}/docs/api" />
    <copy todir="${site}/docs/api">
      <fileset dir="${javadocs}" />
    </copy>
  </target>
  
</project>
